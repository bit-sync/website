"use strict";(self.webpackChunkbit_sync_web=self.webpackChunkbit_sync_web||[]).push([[849],{6164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Intro","href":"/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Gwin Compiler","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Gwin Compiler - Intro","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro into the Gwin Compiler","href":"/docs/gwin-compiler/Intro/","docId":"gwin-compiler/Intro/intro","unlisted":false},{"type":"link","label":"Install Gwin","href":"/docs/gwin-compiler/Intro/installation","docId":"gwin-compiler/Intro/installation","unlisted":false}],"href":"/docs/category/gwin-compiler---intro"},{"type":"category","label":"Gwin Compiler - Headers","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Intro with headers","href":"/docs/gwin-compiler/Headers/intro","docId":"gwin-compiler/Headers/intro","unlisted":false}],"href":"/docs/category/gwin-compiler---headers"},{"type":"link","label":"Make a Basic C program","href":"/docs/gwin-compiler/make-a-c-program","docId":"gwin-compiler/make-a-c-program","unlisted":false}],"href":"/docs/category/gwin-compiler"},{"type":"category","label":"Echo Kernel","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Echo Kernel Overview","href":"/docs/echo-kernel/overview","docId":"echo-kernel/overview","unlisted":false},{"type":"category","label":"Components","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Display System","href":"/docs/echo-kernel/components/display","docId":"echo-kernel/components/display","unlisted":false},{"type":"link","label":"Keyboard System","href":"/docs/echo-kernel/components/keyboard","docId":"echo-kernel/components/keyboard","unlisted":false},{"type":"link","label":"Bootloader","href":"/docs/echo-kernel/components/bootloader","docId":"echo-kernel/components/bootloader","unlisted":false},{"type":"link","label":"Standard Library","href":"/docs/echo-kernel/components/library","docId":"echo-kernel/components/library","unlisted":false}],"href":"/docs/category/components"},{"type":"link","label":"API Reference","href":"/docs/echo-kernel/api-reference","docId":"echo-kernel/api-reference","unlisted":false}],"href":"/docs/category/echo-kernel"},{"type":"link","label":"Branding","href":"/docs/branding","docId":"branding","unlisted":false}]},"docs":{"branding":{"id":"branding","title":"Branding","description":"Color palette","sidebar":"tutorialSidebar"},"echo-kernel/api-reference":{"id":"echo-kernel/api-reference","title":"API Reference","description":"Complete API reference for all Echo Kernel components and subsystems.","sidebar":"tutorialSidebar"},"echo-kernel/components/bootloader":{"id":"echo-kernel/components/bootloader","title":"Bootloader","description":"The Echo Kernel bootloader is responsible for initializing essential system components and transitioning from the boot process to the kernel\'s execution. It serves as the critical bridge between hardware initialization and the kernel\'s main execution phase.","sidebar":"tutorialSidebar"},"echo-kernel/components/display":{"id":"echo-kernel/components/display","title":"Display System","description":"The display system provides low-level screen manipulation functions for text-mode display output. It interfaces directly with video memory at address 0xb8000 and provides basic text output functionality with color support.","sidebar":"tutorialSidebar"},"echo-kernel/components/keyboard":{"id":"echo-kernel/components/keyboard","title":"Keyboard System","description":"The keyboard system manages keyboard input through interrupt handling and provides a high-level interface for getting user input. It handles raw keyboard events, scancode translation, and input buffering.","sidebar":"tutorialSidebar"},"echo-kernel/components/library":{"id":"echo-kernel/components/library","title":"Standard Library","description":"The Echo Kernel standard library (lib namespace) provides essential utility functions for string manipulation, memory operations, character handling, and time management. It implements common functionality typically found in standard C libraries, adapted specifically for the kernel environment.","sidebar":"tutorialSidebar"},"echo-kernel/overview":{"id":"echo-kernel/overview","title":"Echo Kernel Overview","description":"Echo Kernel is a minimalist operating system kernel designed for educational purposes and system programming learning. It provides basic functionality for hardware interaction, input/output operations, and system management.","sidebar":"tutorialSidebar"},"gwin-compiler/Headers/intro":{"id":"gwin-compiler/Headers/intro","title":"Intro with headers","description":"Gwin includes basic header librarys like `stdio.h`, `stdlib.h`, and `windows.h` (There are more)","sidebar":"tutorialSidebar"},"gwin-compiler/Intro/installation":{"id":"gwin-compiler/Intro/installation","title":"Install Gwin","description":"1. Download the latest Release (Installer executable)","sidebar":"tutorialSidebar"},"gwin-compiler/Intro/intro":{"id":"gwin-compiler/Intro/intro","title":"Intro into the Gwin Compiler","description":"Gwin is a Windows, gnu C/C++ compiler and Lua interpreter.","sidebar":"tutorialSidebar"},"gwin-compiler/make-a-c-program":{"id":"gwin-compiler/make-a-c-program","title":"Make a Basic C program","description":"We will make a simple c program and compile it with gcc.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro","description":"Discover Bit Sync","sidebar":"tutorialSidebar"}}}}')}}]);