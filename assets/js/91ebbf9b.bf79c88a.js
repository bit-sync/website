"use strict";(self.webpackChunkbit_sync_web=self.webpackChunkbit_sync_web||[]).push([[2837],{4453:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>l,toc:()=>o});var s=r(4848),i=r(8453);const c={sidebar_position:3},d="API Reference",l={id:"echo-kernel/api-reference",title:"API Reference",description:"Complete API reference for all Echo Kernel components and subsystems.",source:"@site/docs/echo-kernel/api-reference.mdx",sourceDirName:"echo-kernel",slug:"/echo-kernel/api-reference",permalink:"/docs/echo-kernel/api-reference",draft:!1,unlisted:!1,editUrl:"https://github.com/bit-sync/website/blob/main/docs/echo-kernel/api-reference.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Standard Library",permalink:"/docs/echo-kernel/components/library"},next:{title:"Branding",permalink:"/docs/branding"}},t={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Display System",id:"display-system",level:2},{value:"Constants",id:"constants",level:3},{value:"Color Constants",id:"color-constants",level:3},{value:"Functions",id:"functions",level:3},{value:"<code>void clear_screen(void)</code>",id:"void-clear_screenvoid",level:4},{value:"<code>void print(const char *str)</code>",id:"void-printconst-char-str",level:4},{value:"<code>void printc(const char *str, unsigned char color)</code>",id:"void-printcconst-char-str-unsigned-char-color",level:4},{value:"<code>void print_newline(void)</code>",id:"void-print_newlinevoid",level:4},{value:"<code>void backspace(void)</code>",id:"void-backspacevoid",level:4},{value:"Keyboard System",id:"keyboard-system",level:2},{value:"Constants",id:"constants-1",level:3},{value:"Functions",id:"functions-1",level:3},{value:"<code>bool idt_init(void)</code>",id:"bool-idt_initvoid",level:4},{value:"<code>void kb_init(void)</code>",id:"void-kb_initvoid",level:4},{value:"<code>void kb_disable(void)</code>",id:"void-kb_disablevoid",level:4},{value:"<code>char* get_input(const char* prompt = nullptr)</code>",id:"char-get_inputconst-char-prompt--nullptr",level:4},{value:"Bootloader",id:"bootloader",level:2},{value:"Functions",id:"functions-2",level:3},{value:"<code>void boot(void)</code>",id:"void-bootvoid",level:4},{value:"Standard Library",id:"standard-library",level:2},{value:"String Functions",id:"string-functions",level:3},{value:"<code>size_t strlen(const char* str)</code>",id:"size_t-strlenconst-char-str",level:4},{value:"<code>int strcmp(const char* str1, const char* str2)</code>",id:"int-strcmpconst-char-str1-const-char-str2",level:4},{value:"<code>char* strcpy(char* dest, const char* src)</code>",id:"char-strcpychar-dest-const-char-src",level:4},{value:"<code>char* strncpy(char* dest, const char* src, size_t n)</code>",id:"char-strncpychar-dest-const-char-src-size_t-n",level:4},{value:"<code>char* strcat(char* dest, const char* src)</code>",id:"char-strcatchar-dest-const-char-src",level:4},{value:"<code>char* strncat(char* dest, const char* src, size_t n)</code>",id:"char-strncatchar-dest-const-char-src-size_t-n",level:4},{value:"<code>const char* strchr(const char* str, int ch)</code>",id:"const-char-strchrconst-char-str-int-ch",level:4},{value:"Memory Functions",id:"memory-functions",level:3},{value:"<code>void* memcpy(void* dest, const void* src, size_t n)</code>",id:"void-memcpyvoid-dest-const-void-src-size_t-n",level:4},{value:"<code>void* memset(void* ptr, int value, size_t n)</code>",id:"void-memsetvoid-ptr-int-value-size_t-n",level:4},{value:"<code>int memcmp(const void* ptr1, const void* ptr2, size_t n)</code>",id:"int-memcmpconst-void-ptr1-const-void-ptr2-size_t-n",level:4},{value:"Character Functions",id:"character-functions",level:3},{value:"<code>bool isdigit(char c)</code>",id:"bool-isdigitchar-c",level:4},{value:"<code>bool isalpha(char c)</code>",id:"bool-isalphachar-c",level:4},{value:"<code>bool isalnum(char c)</code>",id:"bool-isalnumchar-c",level:4},{value:"<code>bool islower(char c)</code>",id:"bool-islowerchar-c",level:4},{value:"<code>bool isupper(char c)</code>",id:"bool-isupperchar-c",level:4},{value:"<code>char tolower(char c)</code>",id:"char-tolowerchar-c",level:4},{value:"<code>char toupper(char c)</code>",id:"char-toupperchar-c",level:4},{value:"Time Functions",id:"time-functions",level:3},{value:"<code>void sleep(uint32_t milliseconds)</code>",id:"void-sleepuint32_t-milliseconds",level:4},{value:"Conversion Functions",id:"conversion-functions",level:3},{value:"<code>int atoi(const char* str)</code>",id:"int-atoiconst-char-str",level:4},{value:"<code>char* itoa(int value, char* str, int base)</code>",id:"char-itoaint-value-char-str-int-base",level:4},{value:"Hardware Ports",id:"hardware-ports",level:2},{value:"Memory Map",id:"memory-map",level:2},{value:"Error Codes",id:"error-codes",level:2},{value:"Usage Notes",id:"usage-notes",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,s.jsx)(n.p,{children:"Complete API reference for all Echo Kernel components and subsystems."}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#display-system",children:"Display System"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#keyboard-system",children:"Keyboard System"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#bootloader",children:"Bootloader"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#standard-library",children:"Standard Library"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#string-functions",children:"String Functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#memory-functions",children:"Memory Functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#character-functions",children:"Character Functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#time-functions",children:"Time Functions"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#conversion-functions",children:"Conversion Functions"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"display-system",children:"Display System"}),"\n",(0,s.jsx)(n.h3,{id:"constants",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#define LINES 25                    // Screen height\n#define COLUMNS_IN_LINE 80          // Screen width\n#define BYTES_FOR_EACH_ELEMENT 2    // Bytes per character\n#define SCREENSIZE (BYTES_FOR_EACH_ELEMENT * COLUMNS_IN_LINE * LINES)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"color-constants",children:"Color Constants"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Constant"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_BLACK"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x00"})}),(0,s.jsx)(n.td,{children:"Black"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_BLUE"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x01"})}),(0,s.jsx)(n.td,{children:"Blue"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_GREEN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x02"})}),(0,s.jsx)(n.td,{children:"Green"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_CYAN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x03"})}),(0,s.jsx)(n.td,{children:"Cyan"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_RED"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x04"})}),(0,s.jsx)(n.td,{children:"Red"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_MAGENTA"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x05"})}),(0,s.jsx)(n.td,{children:"Magenta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_BROWN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x06"})}),(0,s.jsx)(n.td,{children:"Brown"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_GREY"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x07"})}),(0,s.jsx)(n.td,{children:"Light Grey (Default)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_DARK_GREY"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x08"})}),(0,s.jsx)(n.td,{children:"Dark Grey"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_BLUE"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x09"})}),(0,s.jsx)(n.td,{children:"Light Blue"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_GREEN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0A"})}),(0,s.jsx)(n.td,{children:"Light Green"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_CYAN"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0B"})}),(0,s.jsx)(n.td,{children:"Light Cyan"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_RED"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0C"})}),(0,s.jsx)(n.td,{children:"Light Red"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_LIGHT_MAGENTA"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0D"})}),(0,s.jsx)(n.td,{children:"Light Magenta"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_YELLOW"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0E"})}),(0,s.jsx)(n.td,{children:"Yellow"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CL_WHITE"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x0F"})}),(0,s.jsx)(n.td,{children:"White"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(n.h4,{id:"void-clear_screenvoid",children:(0,s.jsx)(n.code,{children:"void clear_screen(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Clears the entire screen and resets cursor position."}),"\n",(0,s.jsx)(n.h4,{id:"void-printconst-char-str",children:(0,s.jsx)(n.code,{children:"void print(const char *str)"})}),"\n",(0,s.jsx)(n.p,{children:"Prints a string with default color (light grey on black)."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),": ",(0,s.jsx)(n.code,{children:"str"})," - Null-terminated string to print"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Behavior"}),": Handles newlines, scrolling"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"void-printcconst-char-str-unsigned-char-color",children:(0,s.jsx)(n.code,{children:"void printc(const char *str, unsigned char color)"})}),"\n",(0,s.jsx)(n.p,{children:"Prints a string with specified color."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"str"})," - Null-terminated string to print"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"color"})," - Color attribute byte"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"void-print_newlinevoid",children:(0,s.jsx)(n.code,{children:"void print_newline(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Moves cursor to next line, scrolls if needed."}),"\n",(0,s.jsx)(n.h4,{id:"void-backspacevoid",children:(0,s.jsx)(n.code,{children:"void backspace(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Deletes character before cursor."}),"\n",(0,s.jsx)(n.h2,{id:"keyboard-system",children:"Keyboard System"}),"\n",(0,s.jsx)(n.h3,{id:"constants-1",children:"Constants"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:"#define KEYBOARD_DATA_PORT 0x60\n#define KEYBOARD_STATUS_PORT 0x64\n#define MAX_INPUT_LENGTH 256\n"})}),"\n",(0,s.jsx)(n.h3,{id:"functions-1",children:"Functions"}),"\n",(0,s.jsx)(n.h4,{id:"bool-idt_initvoid",children:(0,s.jsx)(n.code,{children:"bool idt_init(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Initializes Interrupt Descriptor Table."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Success status"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"void-kb_initvoid",children:(0,s.jsx)(n.code,{children:"void kb_init(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Enables keyboard interrupts."}),"\n",(0,s.jsx)(n.h4,{id:"void-kb_disablevoid",children:(0,s.jsx)(n.code,{children:"void kb_disable(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Disables keyboard interrupts."}),"\n",(0,s.jsx)(n.h4,{id:"char-get_inputconst-char-prompt--nullptr",children:(0,s.jsx)(n.code,{children:"char* get_input(const char* prompt = nullptr)"})}),"\n",(0,s.jsx)(n.p,{children:"Gets line of input from keyboard."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),": ",(0,s.jsx)(n.code,{children:"prompt"})," - Optional prompt string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": User input as null-terminated string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Max Length"}),": 256 characters"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"bootloader",children:"Bootloader"}),"\n",(0,s.jsx)(n.h3,{id:"functions-2",children:"Functions"}),"\n",(0,s.jsx)(n.h4,{id:"void-bootvoid",children:(0,s.jsx)(n.code,{children:"void boot(void)"})}),"\n",(0,s.jsx)(n.p,{children:"Main boot sequence function."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Initializes IDT"}),"\n",(0,s.jsx)(n.li,{children:"Sets up display"}),"\n",(0,s.jsx)(n.li,{children:"Launches kernel"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"standard-library",children:"Standard Library"}),"\n",(0,s.jsx)(n.h3,{id:"string-functions",children:"String Functions"}),"\n",(0,s.jsx)(n.h4,{id:"size_t-strlenconst-char-str",children:(0,s.jsx)(n.code,{children:"size_t strlen(const char* str)"})}),"\n",(0,s.jsx)(n.p,{children:"Returns string length."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),": ",(0,s.jsx)(n.code,{children:"str"})," - Input string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Number of characters before null terminator"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"int-strcmpconst-char-str1-const-char-str2",children:(0,s.jsx)(n.code,{children:"int strcmp(const char* str1, const char* str2)"})}),"\n",(0,s.jsx)(n.p,{children:"Compares two strings."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"0"})," if equal"]}),"\n",(0,s.jsx)(n.li,{children:"Negative value if str1 is less than str2"}),"\n",(0,s.jsx)(n.li,{children:"Positive value if str1 is greater than str2"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"char-strcpychar-dest-const-char-src",children:(0,s.jsx)(n.code,{children:"char* strcpy(char* dest, const char* src)"})}),"\n",(0,s.jsx)(n.p,{children:"Copies string including null terminator."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to dest"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"char-strncpychar-dest-const-char-src-size_t-n",children:(0,s.jsx)(n.code,{children:"char* strncpy(char* dest, const char* src, size_t n)"})}),"\n",(0,s.jsx)(n.p,{children:"Copies up to n characters."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to dest"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"char-strcatchar-dest-const-char-src",children:(0,s.jsx)(n.code,{children:"char* strcat(char* dest, const char* src)"})}),"\n",(0,s.jsx)(n.p,{children:"Concatenates strings."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to dest"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"char-strncatchar-dest-const-char-src-size_t-n",children:(0,s.jsx)(n.code,{children:"char* strncat(char* dest, const char* src, size_t n)"})}),"\n",(0,s.jsx)(n.p,{children:"Concatenates up to n characters."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to dest"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"const-char-strchrconst-char-str-int-ch",children:(0,s.jsx)(n.code,{children:"const char* strchr(const char* str, int ch)"})}),"\n",(0,s.jsx)(n.p,{children:"Finds first occurrence of character."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to character or nullptr"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"memory-functions",children:"Memory Functions"}),"\n",(0,s.jsx)(n.h4,{id:"void-memcpyvoid-dest-const-void-src-size_t-n",children:(0,s.jsx)(n.code,{children:"void* memcpy(void* dest, const void* src, size_t n)"})}),"\n",(0,s.jsx)(n.p,{children:"Copies n bytes between memory regions."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to dest"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"void-memsetvoid-ptr-int-value-size_t-n",children:(0,s.jsx)(n.code,{children:"void* memset(void* ptr, int value, size_t n)"})}),"\n",(0,s.jsx)(n.p,{children:"Fills memory with specified value."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to ptr"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"int-memcmpconst-void-ptr1-const-void-ptr2-size_t-n",children:(0,s.jsx)(n.code,{children:"int memcmp(const void* ptr1, const void* ptr2, size_t n)"})}),"\n",(0,s.jsx)(n.p,{children:"Compares memory regions."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"0"})," if equal, difference otherwise"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"character-functions",children:"Character Functions"}),"\n",(0,s.jsx)(n.h4,{id:"bool-isdigitchar-c",children:(0,s.jsx)(n.code,{children:"bool isdigit(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if character is digit (0-9)."}),"\n",(0,s.jsx)(n.h4,{id:"bool-isalphachar-c",children:(0,s.jsx)(n.code,{children:"bool isalpha(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if character is letter (a-z, A-Z)."}),"\n",(0,s.jsx)(n.h4,{id:"bool-isalnumchar-c",children:(0,s.jsx)(n.code,{children:"bool isalnum(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if character is alphanumeric."}),"\n",(0,s.jsx)(n.h4,{id:"bool-islowerchar-c",children:(0,s.jsx)(n.code,{children:"bool islower(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if character is lowercase."}),"\n",(0,s.jsx)(n.h4,{id:"bool-isupperchar-c",children:(0,s.jsx)(n.code,{children:"bool isupper(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Checks if character is uppercase."}),"\n",(0,s.jsx)(n.h4,{id:"char-tolowerchar-c",children:(0,s.jsx)(n.code,{children:"char tolower(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Converts to lowercase."}),"\n",(0,s.jsx)(n.h4,{id:"char-toupperchar-c",children:(0,s.jsx)(n.code,{children:"char toupper(char c)"})}),"\n",(0,s.jsx)(n.p,{children:"Converts to uppercase."}),"\n",(0,s.jsx)(n.h3,{id:"time-functions",children:"Time Functions"}),"\n",(0,s.jsx)(n.h4,{id:"void-sleepuint32_t-milliseconds",children:(0,s.jsx)(n.code,{children:"void sleep(uint32_t milliseconds)"})}),"\n",(0,s.jsx)(n.p,{children:"Delays execution."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),": ",(0,s.jsx)(n.code,{children:"milliseconds"})," - Delay duration"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"conversion-functions",children:"Conversion Functions"}),"\n",(0,s.jsx)(n.h4,{id:"int-atoiconst-char-str",children:(0,s.jsx)(n.code,{children:"int atoi(const char* str)"})}),"\n",(0,s.jsx)(n.p,{children:"Converts string to integer."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),": ",(0,s.jsx)(n.code,{children:"str"})," - Number string"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Integer value"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"char-itoaint-value-char-str-int-base",children:(0,s.jsx)(n.code,{children:"char* itoa(int value, char* str, int base)"})}),"\n",(0,s.jsx)(n.p,{children:"Converts integer to string."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," - Number to convert"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"str"})," - Output buffer"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"base"})," - Number base (2-36)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": Pointer to str"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"hardware-ports",children:"Hardware Ports"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Port"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x60"})}),(0,s.jsx)(n.td,{children:"Keyboard Data Port"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0x64"})}),(0,s.jsx)(n.td,{children:"Keyboard Status Port"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0xb8000"})}),(0,s.jsx)(n.td,{children:"Video Memory Base"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"memory-map",children:"Memory Map"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Address"}),(0,s.jsx)(n.th,{children:"Usage"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0xb8000"})}),(0,s.jsx)(n.td,{children:"Video Memory Start"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"0xb8000 + SCREENSIZE"})}),(0,s.jsx)(n.td,{children:"Video Memory End"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"error-codes",children:"Error Codes"}),"\n",(0,s.jsx)(n.p,{children:"Most functions return one of these types:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Boolean: ",(0,s.jsx)(n.code,{children:"true"})," for success, ",(0,s.jsx)(n.code,{children:"false"})," for failure"]}),"\n",(0,s.jsxs)(n.li,{children:["Pointers: ",(0,s.jsx)(n.code,{children:"nullptr"})," for failure"]}),"\n",(0,s.jsxs)(n.li,{children:["Integers: ",(0,s.jsx)(n.code,{children:"0"})," for success, non-zero for specific errors"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usage-notes",children:"Usage Notes"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Display Functions"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always check screen boundaries"}),"\n",(0,s.jsx)(n.li,{children:"Handle scrolling automatically"}),"\n",(0,s.jsx)(n.li,{children:"Color attributes combine foreground and background (using bit shift)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Keyboard Functions"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Initialize IDT before using keyboard"}),"\n",(0,s.jsx)(n.li,{children:"Check input buffer limits"}),"\n",(0,s.jsx)(n.li,{children:"Handle input termination (Enter key)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Memory Functions"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Verify buffer sizes"}),"\n",(0,s.jsx)(n.li,{children:"Check for overlap in memcpy"}),"\n",(0,s.jsx)(n.li,{children:"Ensure proper alignment"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"String Functions"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure destination buffers are large enough"}),"\n",(0,s.jsx)(n.li,{children:"Always check for null terminators"}),"\n",(0,s.jsx)(n.li,{children:"Use n-variants for better safety"}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var s=r(6540);const i={},c=s.createContext(i);function d(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);