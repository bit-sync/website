"use strict";(self.webpackChunkbit_sync_web=self.webpackChunkbit_sync_web||[]).push([[5820],{8336:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>d});var r=i(4848),s=i(8453);const t={sidebar_position:1},l="Echo Kernel Overview",o={id:"echo-kernel/overview",title:"Echo Kernel Overview",description:"Echo Kernel is a minimalist operating system kernel designed for educational purposes and system programming learning. It provides basic functionality for hardware interaction, input/output operations, and system management.",source:"@site/docs/echo-kernel/overview.mdx",sourceDirName:"echo-kernel",slug:"/echo-kernel/overview",permalink:"/docs/echo-kernel/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/bit-sync/website/blob/main/docs/echo-kernel/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Echo Kernel",permalink:"/docs/category/echo-kernel"},next:{title:"Components",permalink:"/docs/category/components"}},c={},d=[{value:"Core Components",id:"core-components",level:2},{value:"System Layer (<code>sys/</code>)",id:"system-layer-sys",level:3},{value:"Boot Process (<code>bootloader/</code>)",id:"boot-process-bootloader",level:3},{value:"Standard Library (<code>lib/</code>)",id:"standard-library-lib",level:3},{value:"Kernel Core (<code>kernel/</code>)",id:"kernel-core-kernel",level:3},{value:"Key Features",id:"key-features",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Documentation Structure",id:"documentation-structure",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"echo-kernel-overview",children:"Echo Kernel Overview"})}),"\n",(0,r.jsx)(n.p,{children:"Echo Kernel is a minimalist operating system kernel designed for educational purposes and system programming learning. It provides basic functionality for hardware interaction, input/output operations, and system management."}),"\n",(0,r.jsx)(n.h2,{id:"core-components",children:"Core Components"}),"\n",(0,r.jsx)(n.p,{children:"The kernel is organized into several key components:"}),"\n",(0,r.jsxs)(n.h3,{id:"system-layer-sys",children:["System Layer (",(0,r.jsx)(n.code,{children:"sys/"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Display System"}),": Text-mode display management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Keyboard System"}),": Keyboard input handling and interrupt management"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"boot-process-bootloader",children:["Boot Process (",(0,r.jsx)(n.code,{children:"bootloader/"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Boot Sequence"}),": System initialization and kernel launch"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"IDT Setup"}),": Interrupt Descriptor Table configuration"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"standard-library-lib",children:["Standard Library (",(0,r.jsx)(n.code,{children:"lib/"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"String Operations"}),": String manipulation functions"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Memory Operations"}),": Memory management utilities"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Character Functions"}),": Character type checking and conversion"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Time Functions"}),": Basic timing operations"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"kernel-core-kernel",children:["Kernel Core (",(0,r.jsx)(n.code,{children:"kernel/"}),")"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Main Loop"}),": System main loop and process management"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"System Control"}),": Core kernel functionality"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hardware Interaction"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Direct video memory manipulation"}),"\n",(0,r.jsx)(n.li,{children:"Interrupt-based keyboard input"}),"\n",(0,r.jsx)(n.li,{children:"Hardware port I/O"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Input/Output"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Text display with color support"}),"\n",(0,r.jsx)(n.li,{children:"Keyboard input buffering"}),"\n",(0,r.jsx)(n.li,{children:"Basic console functionality"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System Utilities"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Standard library functions"}),"\n",(0,r.jsx)(n.li,{children:"Memory manipulation"}),"\n",(0,r.jsx)(n.li,{children:"String handling"}),"\n",(0,r.jsx)(n.li,{children:"Time management"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(n.p,{children:"The Echo Kernel follows a modular architecture:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Echo Kernel\n\u251c\u2500\u2500 bootloader/     # System initialization\n\u251c\u2500\u2500 sys/           # Hardware interfaces\n\u2502   \u251c\u2500\u2500 display    # Screen output\n\u2502   \u2514\u2500\u2500 keyboard   # Input handling\n\u251c\u2500\u2500 lib/           # Standard library\n\u2514\u2500\u2500 kernel/        # Core kernel code\n"})}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(n.p,{children:"To work with Echo Kernel, you'll need to understand:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic Concepts"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"x86 architecture"}),"\n",(0,r.jsx)(n.li,{children:"Interrupt handling"}),"\n",(0,r.jsx)(n.li,{children:"Memory management"}),"\n",(0,r.jsx)(n.li,{children:"I/O operations"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Development Environment"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"C++ compiler"}),"\n",(0,r.jsx)(n.li,{children:"Assembly knowledge"}),"\n",(0,r.jsx)(n.li,{children:"Hardware emulation (optional)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"documentation-structure",children:"Documentation Structure"}),"\n",(0,r.jsx)(n.p,{children:"This documentation is organized into several sections:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System Components"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Detailed documentation of each system module"}),"\n",(0,r.jsx)(n.li,{children:"API references"}),"\n",(0,r.jsx)(n.li,{children:"Implementation details"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Development Guide"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Setup instructions"}),"\n",(0,r.jsx)(n.li,{children:"Development workflows"}),"\n",(0,r.jsx)(n.li,{children:"Debugging techniques"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Reference"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Function documentation"}),"\n",(0,r.jsx)(n.li,{children:"Hardware specifications"}),"\n",(0,r.jsx)(n.li,{children:"System constants"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Navigate through the sidebar to explore detailed documentation for each component."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var r=i(6540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);